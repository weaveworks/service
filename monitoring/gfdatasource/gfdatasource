#!/usr/bin/env bash

# Grafana stores all config in its database.
# We can provide dashboards as .json files in a known path.
# But we can't provide data sources in a similar, declarative fashion.
# The only way to add them programmatically is via the HTTP API.
# So, this dumb service does that, in a loop, forever.

default_url="http://prometheus.monitoring.svc.cluster.local"

echo "gfdatasource starting..."
data_source_url="${1:-$default_url}"
echo "Setting data source to: ${data_source_url}"
trap "{ echo gfdatasource exiting; exit 0; }" INT TERM

create() {
	curl -Ss -v -H "Content-Type: application/json" -XPOST -d"{
		\"name\": \"Scope-as-a-Service Prometheus\",
		\"type\": \"prometheus\",
		\"url\": \"${data_source_url}\",
		\"access\": \"proxy\",
		\"basicAuth\": false
	}" http://admin:admin@127.0.0.1:80/api/datasources >/dev/null 2>&1

	for user in 1 2; do
		curl -Ss -v -H "Content-Type: application/json" -XPOST -d"{
			\"name\": \"Frankenstein User ${user}\",
			\"type\": \"prometheus\",
			\"url\": \"http://frontend.default.svc.cluster.local/api/prom\",
			\"access\": \"proxy\",
			\"basicAuth\": true,
			\"basicAuthUser\": \"unused\",
			\"basicAuthPassword\": \"${user}\"
		}" http://admin:admin@127.0.0.1:80/api/datasources >/dev/null 2>&1
	done
}

while true
do
	create
	sleep 10
done

