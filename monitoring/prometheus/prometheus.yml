global:
  scrape_interval: 15s
  evaluation_interval: 15s

rule_files:
- alert.rules
- recording.rules

# This scrape config gather all service endpoints
scrape_configs:
- job_name: 'kubernetes-service-endpoints'
  kubernetes_sd_configs:
  - api_servers:
    - 'https://kubernetes.default.svc.cluster.local'
    in_cluster: true
    role: endpoint

  # You can specify the following annotations (on services):
  #   prometheus.io.scrape: false - don't scrape this service
  #   prometheus.io.scheme: https - use https for scraping
  #   prometheus.io.port - scrape this port
  #   prometheus.io.path - scrape this path
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_kubernetes_io_cluster_service]
    action: drop
    regex: true
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    action: drop
    regex: false
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    action: replace
    target_label: __scheme__
    regex: ^(https?)$
    replacement: $1
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    action: replace
    target_label: __metrics_path__
    regex: ^(.+)$
    replacement: $1
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    action: replace
    target_label: __address__
    regex: ^(.+)(?::\d+);(\d+)$
    replacement: $1:$2
  - action: labelmap
    regex: ^__meta_kubernetes_service_label_(.+)$
    replacement: $1
  - source_labels: [__meta_kubernetes_service_namespace]
    action: replace
    regex: ^(.+)$
    target_label: namespace
    replacement: $1
  - source_labels: [__meta_kubernetes_service_name]
    regex: ^(.+)$
    target_label: job
    replacement: $1

- job_name: 'kubernetes-pods'
  kubernetes_sd_configs:
  - api_servers:
    - 'https://kubernetes.default.svc.cluster.local'
    in_cluster: true
    role: pod

  # You can specify the following annotations (on services):
  #   prometheus.io.scrape: true - scrape this pod
  #   prometheus.io.port - scrape this port
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
    action: keep
    regex: true
  - source_labels: [__meta_kubernetes_pod_namespace, __meta_kubernetes_pod_label_name]
    separator: '/'
    target_label: job
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node

# This scrape config gather all nodes
- job_name: 'kubernetes-nodes'
  kubernetes_sd_configs:
  - api_servers:
    - 'https://kubernetes.default.svc.cluster.local'
    in_cluster: true
    role: node

  # couldn't get prometheus to validate the kublet cert for scraping, so don't bother for now
  tls_config:
    insecure_skip_verify: true
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  relabel_configs:
  - target_label: __scheme__
    replacement: https
  - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname, __meta_kubernetes_node_port]
    separator: ':'
    target_label: __address__
  - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
    target_label: instance

# This scrape config gathers data from the api server
- job_name: 'kubernetes-api'
  kubernetes_sd_configs:
  - api_servers:
    - 'https://kubernetes.default.svc.cluster.local'
    in_cluster: true
    role: apiserver

  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
