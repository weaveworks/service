#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

if [ $# -ne 1 ]
then
	echo "usage: $(basename $0) <name>"
	exit 1
fi

NAME=$1
CLWD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/${NAME}"

if [ ! -d ${CLWD} ]
then
	echo "${CLWD} is not a directory"
	exit 1
fi

echo "Sourcing ${CLWD}/var"
source ${CLWD}/var

echo Creating ${CLWD}/tfvars
cat >${CLWD}/tfvars <<EOF
# This file was automatically generated by tfgen.
# The authoritative source for this data is ${NAME}/var.
# To edit this file, modify ${NAME}/var and re-run tfgen.

aws_access_key = "${AWS_ACCESS_KEY}"
aws_secret_key = "${AWS_SECRET_KEY}"
aws_region = "${AWS_REGION}"
env_name = "${NAME}"

k8s_node_count = "${K8S_NODE_COUNT}"
k8s_node_instance_type = "${K8S_NODE_INSTANCE_TYPE}"

rds_subnet_a_availability_zone = "${RDS_SUBNET_A_AZ}"
rds_subnet_b_availability_zone = "${RDS_SUBNET_B_AZ}"
rds_vpc_resource_name_prefix = "rds_${NAME}"
rds_users_db_identifier = "users-db-${NAME}"

users_db_password = "${RDS_USERS_DB_PASSWORD}"

route53_zone_name = "${R53_ZONE_NAME}"
route53_resource_name = "${R53_RESOURCE_NAME}"
route53_frontend_elb_endpoint = "${R53_FRONTEND_ELB_ENDPOINT}"
route53_frontend_elb_zone_id = "${R53_FRONTEND_ELB_ZONE_ID}"

EOF

echo Creating ${CLWD}/aws.tf
cp aws.template ${CLWD}/aws.tf
echo Creating ${CLWD}/k8s.tf
cp k8s.template ${CLWD}/k8s.tf
