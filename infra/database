#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
set -x

if [ $# -ne 2 ]
then
	echo "usage: $(basename $0) loadschema/dump <name>"
	exit 1
fi

WHAT=$1
NAME=$2
CLWD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/${NAME}"

if [ ! -d ${CLWD} ]
then
	echo "${CLWD} is not a directory"
	exit 1
fi

function load_schema {
	local dbname=$1
	local schema=$2
	local hostname=$( cat ${CLWD}/tfstate | jq -r .modules[0].resources.\"aws_db_instance.${dbname}\".primary.attributes.address )
	local password=$( cat ${CLWD}/tfstate | jq -r .modules[0].resources.\"aws_db_instance.${dbname}\".primary.attributes.password )
	local podname="dbloadschema-$(cat /dev/urandom|xxd -ps|head -c5)"
	echo "Loading ${schema} to ${hostname}"
	trap "kubectl --kubeconfig=${CLWD}/kubeconfig stop pod --grace-period=1 ${podname}" EXIT
	cat ${schema} | kubectl --kubeconfig=${CLWD}/kubeconfig run ${podname} --image=postgres --stdin --restart=Never --env="PGPASSWORD=${password}" --command -- psql -U postgres -h ${hostname}
}

function dump {
	local dbname=$1
	local database=$2
	local datestr=$( date +%Y%m%d-%H%M%S )
	local hostname=$( cat ${CLWD}/tfstate | jq -r .modules[0].resources.\"aws_db_instance.${dbname}\".primary.attributes.address )
	local password=$( cat ${CLWD}/tfstate | jq -r .modules[0].resources.\"aws_db_instance.${dbname}\".primary.attributes.password )
	local podname="dbdump-$(cat /dev/urandom|xxd -ps|head -c5)"
	local output="${dbname}-${database}-${datestr}.sql"
	echo "Dumping ${dbname} (${database}) to ${output}"
	trap "kubectl --kubeconfig=${CLWD}/kubeconfig stop pod --grace-period=1 ${podname}" EXIT
	kubectl --kubeconfig=${CLWD}/kubeconfig run ${podname} --image=postgres --stdin --restart=Never --env="PGPASSWORD=${password}" --command -- pg_dump -U postgres -h ${hostname} --dbname=${database} | tee ${output}
}

case $WHAT in
loadschema)
	load_schema app_mapper_database ${CLWD}/../../app-mapper/db/schema.sql
	load_schema users_database ${CLWD}/../../users/db/schema.sql
	;;

dump)
	dump app_mapper_database
	dump users_database
	;;

*)
	echo Unknown command
	exit 1
	;;
esac

