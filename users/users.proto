syntax = "proto3";

package users;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option (gogoproto.populate_all) = true;

service Users {
    // LookupOrg authenticates & authorizes a cookie for access to an org by extenal ID.
    rpc LookupOrg(LookupOrgRequest) returns (LookupOrgResponse) {};

    // LookupUsingToken authenticates & authorizes a token for access to an org.
    rpc LookupUsingToken(LookupUsingTokenRequest) returns (LookupUsingTokenResponse) {};

    // LookupAdmin authenticates & authorizes a cookie for admin access.
    rpc LookupAdmin(LookupAdminRequest) returns (LookupAdminResponse) {};

    // LookupUser authenticates a cookie.
    rpc LookupUser(LookupUserRequest) returns (LookupUserResponse) {};

    rpc GetOrganizations(GetOrganizationsRequest) returns (GetOrganizationsResponse) {};
    rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse) {};
    rpc SetOrganizationFlag(SetOrganizationFlagRequest) returns (SetOrganizationFlagResponse) {};

    // GetUser returns details for a user
    rpc GetUser(GetUserRequest) returns (GetUserResponse) {};
}

enum AuthorizedAction {
    OTHER       = 0;
    INSTANCE_DATA_ACCESS = 1;
    INSTANCE_DATA_UPLOAD = 2;
}

message LookupOrgRequest {
    reserved 3;

    string Cookie = 1;
    string OrgExternalID = 2;

    AuthorizedAction AuthorizeFor = 4;
}

message LookupOrgResponse {
    string OrganizationID = 1 [(gogoproto.jsontag) = "organizationID,omitempty"];
    string UserID = 2 [(gogoproto.jsontag) = "userID,omitempty"];
    repeated string FeatureFlags = 3 [(gogoproto.jsontag) = "featureFlags,omitempty"];
}

message LookupUsingTokenRequest {
    string Token = 1;
    AuthorizedAction AuthorizeFor = 2;
}

message LookupUsingTokenResponse {
    string OrganizationID = 1 [(gogoproto.jsontag) = "organizationID,omitempty"];
    repeated string FeatureFlags = 2 [(gogoproto.jsontag) = "featureFlags,omitempty"];
}

message LookupAdminRequest {
    string Cookie = 1;
}

message LookupAdminResponse {
    string AdminID = 1 [(gogoproto.jsontag) = "adminID,omitempty"];
}

message LookupUserRequest {
    string Cookie = 1;
}

message LookupUserResponse {
    string UserID = 1 [(gogoproto.jsontag) = "userID,omitempty"];
}

message GetOrganizationsRequest {
  string Query = 1;
  int32 PageNumber = 2;
}

message GetOrganizationsResponse {
    repeated Organization Organizations = 1 [(gogoproto.nullable) = false];
}

message GetOrganizationRequest {
    string ExternalID = 1;
}

message GetOrganizationResponse {
    Organization Organization = 1 [(gogoproto.nullable) = false];
}

message Organization {
    string ID = 1;
    string ExternalID = 2;
    string Name = 3;
    string ProbeToken = 4;
    google.protobuf.Timestamp CreatedAt = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    repeated string FeatureFlags = 6;
    bool DenyUIFeatures = 7;
    bool DenyTokenAuth = 8;
    google.protobuf.Timestamp FirstConnectedAt = 9 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
}

message SetOrganizationFlagRequest {
  string ExternalID = 1;
  string Flag = 2;
  bool Value = 3;
}

message SetOrganizationFlagResponse {

}

message GetUserRequest {
    string UserID = 1;
}

message GetUserResponse {
    User User = 1 [(gogoproto.nullable) = false];
}

message User {
    string ID = 1 [(gogoproto.jsontag) = "-"];
    string Email = 2 [(gogoproto.jsontag) = "email"];
    string Token = 3 [(gogoproto.jsontag) = "-"];
    google.protobuf.Timestamp TokenCreatedAt = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = "-"];
    google.protobuf.Timestamp FirstLoginAt = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = "-"];
    google.protobuf.Timestamp CreatedAt = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = "-"];
    bool Admin = 7 [(gogoproto.jsontag) = "-"];
}
