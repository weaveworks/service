# Users service
location = /api/users/login {
  proxy_pass http://users.default.svc.cluster.local$request_uri;
}

location /api/users/ {
  proxy_pass http://users.default.svc.cluster.local$request_uri;
  proxy_connect_timeout 5s;
  proxy_read_timeout 5s;
  proxy_send_timeout 5s;
}

# Serve scope index.html with no caching
location ~ ^/api/app/[^/]+/$ {
  add_header Cache-Control no-cache;
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/app/ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/org/ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/deploy {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/config {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/prom {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location = /api/report {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /admin/ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;

  proxy_redirect off;
  proxy_pass_request_headers on;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection Upgrade;
  proxy_intercept_errors on;

  error_page 401 = @401;
}

location @401 {
  return 302 $scheme://$host/#/login;
}

# pipe delete requests from probe
location ~ ^/api/pipe/pipe-[^/]+$ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

# topology (from UI), pipe (from both UI and probe) and control (from probe) websockets
location ~ ^/api/(app/[^/]+/api/(topology/[^/]+/ws|pipe/pipe-[^/]+)|pipe/pipe-[^/]+/probe|control/ws)$ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
}

# Static version file
location = /api {
  alias /home/weave/api.json;
}

location /launch/k8s/ {
  proxy_pass http://launch-generator.extra.svc.cluster.local$request_uri;
}

# Demo app served at /demo/
location = /demo {
  rewrite ^ /demo/ redirect;
  break;
}

location ~ ^/demo/?((?<=/).*)?$ {
  proxy_pass http://demo.extra.svc.cluster.local/$1$is_args$args;

  proxy_redirect off;
  proxy_pass_request_headers on;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection Upgrade;
}

# Backwards-compatible with hash history
# This directive should be removed after 2017-03-01
location ^/# {
  rewrite ^/#(.*) $1 redirect;
  break;
}

# Serve service index.html with no-caching.
location = / {
  add_header Cache-Control no-cache;
  proxy_pass http://ui-server.default.svc.cluster.local$request_uri;
}

# The rest will be served by the ui-server
location / {
  proxy_pass http://ui-server.default.svc.cluster.local$request_uri;
}
