# Users service
location = /api/users/login {
  # Apply anti-bruteforce rate-limitting to login.
  # Any additional requests coming from clients exceeding the
  # rate-limit are put into a shared queue of 5 requests (which
  # will start discarding requests with 503s when full)
  limit_req zone=antibf burst=5;
  proxy_pass http://users.default.svc.cluster.local$request_uri;
}

# Apply a more relaxed anti-DoS rate-limiting to all
# authentication-unrelated endpoints
limit_req zone=antidos burst=10;

location /api/users/ {
  proxy_pass http://users.default.svc.cluster.local$request_uri;
}

location /api/app/ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/org/ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location = /api/report {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /admin/ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;

  proxy_redirect off;
  proxy_pass_request_headers on;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection Upgrade;
}

# pipe delete requests from probe
location ~ ^/api/pipe/pipe-[^/]+$ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

# topology (from UI), pipe (from both UI and probe) and control (from probe) websockets
location ~ ^/api/(app/[^/]+/api/(topology/[^/]+/ws|pipe/pipe-[^/]+)|pipe/pipe-[^/]+/probe|control/ws)$ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
}

# Static version file
location = /api {
  alias /home/weave/api.json;
}

location /launch/k8s/ {
  proxy_pass http://launch-generator.default.svc.cluster.local$request_uri;
}

# The rest will be served by the ui-server
location / {
  proxy_pass http://ui-server.default.svc.cluster.local$request_uri;
}
