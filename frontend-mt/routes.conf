# Users service
location = /api/users/login {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/users/ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
  proxy_connect_timeout 5s;
  proxy_read_timeout 5s;
  proxy_send_timeout 5s;
}

# Serve scope index.html with no caching
location ~ ^/api/app/[^/]+/$ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/app/ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/org/ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/deploy {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/config {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /api/prom {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location = /api/report {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /admin/ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $http_connection;

  proxy_intercept_errors on;
  error_page 401 = @401;
}

location @401 {
  return 302 $scheme://$host/login;
}

# pipe delete requests from probe
location ~ ^/api/pipe/pipe-[^/]+$ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

location /launch/k8s/ {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

# Demo app served at /demo/
location = /demo {
  rewrite ^ /demo/ redirect;
  break;
}

# Serve service index.html with no-caching.
location = / {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
}

# The rest will be routed by authfe without further modification
location / {
  proxy_pass http://authfe.default.svc.cluster.local$request_uri;
  # nginx doesn't pass these headers to the proxy by default, force it to
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $http_connection;
}
