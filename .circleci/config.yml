version: 2
defaults: &defaults
  machine:
    docker_layer_caching: true
  working_directory: ~/weaveworks/service
jobs:
  lint:
    <<: *defaults
    steps:
      - checkout
      - run: make RM= lint

  build:
    <<: *defaults
    steps:
      - checkout
      - run: sudo docker info >/dev/null 2>&1 || sudo service docker start;
      - restore_cache:
          keys:
            - build-image-cache-{{ checksum "build/build.sh" }}-{{ checksum "build/Dockerfile" }}
      - run: |
          cd build
          ../tools/rebuild-image quay.io/weaveworks/build . build.sh Dockerfile
          touch .uptodate
      - save_cache:
          key: build-image-cache-{{ checksum "build/build.sh" }}-{{ checksum "build/Dockerfile" }}
          paths:
            - ~/docker
      - run: make
      - run: |
          set -e
          set -o pipefail
          if [ $(./tools/image-tag | grep -e '-WIP$') ]; then
            echo "WIP build; exiting with error to mark as a failure"
            git --no-pager diff
            exit 1
          fi
      - run:
          name: Upload docker images for use later in workflow
          command: |
            docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" quay.io
            IMAGE_TAG="$(./tools/image-tag)"
            IMAGES=$(make images)
            for image in ${IMAGES}; do
              if [[ "$image" == *"build"* ]]; then
                continue
              fi
              tagged_image="${image}:${IMAGE_TAG}"
              repo_tmp_image="$(echo $tagged_image | sed -E 's|(/weaveworks)/(.*):(.*)|\1/build-tmp:\2-\3|')"
              docker tag ${tagged_image} ${repo_tmp_image}
              docker push $repo_tmp_image
            done
      - persist_to_workspace:
          root: .
          paths:
          - users/mock_users/mock_usersclient.go
          - users/client/mock_client.go
          - billing-api/db/mock_db/mock_db.go
          - common/billing/grpc/mock_grpc.go
          - common/gcp/partner/mock_partner/mock_access.go
          - common/gcp/partner/mock_partner/mock_client.go
          - gcp-service/grpc/gcp-service.pb.go
          - users/users.pb.go
          - common/billing/grpc/billing.pb.go
          - kubectl-service/grpc/kubectl-service.pb.go

  test:
    <<: *defaults
    steps:
      - checkout
      - run: echo -e "export GOPATH=$HOME\nexport PATH=/usr/local/go/bin:$HOME/bin:$PATH" >> $BASH_ENV
      # Link the working directory so that it appears in GOPATH. This is required for cover to map coverage statistics to sources.
      - run: mkdir -p ${GOPATH}/src/github.com/weaveworks && ln -s $(pwd) ${GOPATH}/src/github.com/weaveworks/service
      - run: go get github.com/mattn/goveralls
      - run: COVERDIR=./coverage make RM= test
      - run: ./tools/cover/gather_coverage.sh ./coverage $CIRCLE_WORKING_DIRECTORY/coverage
      - run: goveralls -repotoken $COVERALLS_REPO_TOKEN -coverprofile=$CIRCLE_WORKING_DIRECTORY/profile.cov -service=circleci || true
      - run: mkdir /tmp/coverage && cp coverage.* /tmp/coverage
      - store_artifacts:
          path: /tmp/coverage

  integration-test:
    <<: *defaults
    steps:
      - checkout
      - &pull-tmp-images
        run:
          name: Download docker images build earlier in workflow
          command: |
            docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" quay.io
            # Pull our previously built image, retag it
            IMAGE_TAG="$(./tools/image-tag)"
            IMAGES=$(make images)
            for image in ${IMAGES}; do
              if [[ "$image" == *"build"* ]]; then
                continue
              fi
              tagged_image="${image}:${IMAGE_TAG}"
              repo_tmp_image="$(echo $tagged_image | sed -E 's|(/weaveworks)/(.*):(.*)|\1/build-tmp:\2-\3|')"
              docker pull $repo_tmp_image
              docker tag ${repo_tmp_image} ${tagged_image}
              docker tag ${repo_tmp_image} ${image}:latest
              docker image rm ${repo_tmp_image}
            done
      - attach_workspace:
          at: .
      - run: go get github.com/nats-io/gnatsd
      - run:
          command: gnatsd
          background: true
      - run: |
          touch users/mock_users/mock_usersclient.go users/client/mock_client.go billing-api/db/mock_db/mock_db.go common/billing/grpc/mock_grpc.go common/gcp/partner/mock_partner/mock_access.go common/gcp/partner/mock_partner/mock_client.go gcp-service/grpc/gcp-service.pb.go users/users.pb.go common/billing/grpc/billing.pb.go kubectl-service/grpc/kubectl-service.pb.go
          make touch-uptodate
          make RM= notification-integration-test
          make RM= notebooks-integration-test
          make RM= users-integration-test
          make RM= billing-integration-test
          make RM= pubsub-integration-test
          make RM= flux-integration-test
          make RM= kubectl-service-integration-test
          make RM= gcp-service-integration-test

  upload:
    <<: *defaults
    steps:
      - checkout
      - <<: *pull-tmp-images
      - run:
          name: Publish docker images to final repository
          command: |
            set -o pipefail
            export LAST_BUILD_COMMIT=$(curl -sS 'https://circleci.com/api/v1/project/weaveworks/service/tree/'$CIRCLE_BRANCH'?circle-token='$CIRCLE_TOKEN'&filter=successful&limit=50' | jq -r 'map(select(.build_parameters.CIRCLE_JOB == "upload")) | .[0].vcs_revision')
            echo Last successful build was commit $LAST_BUILD_COMMIT
            ./push-images --if-changed-since $LAST_BUILD_COMMIT

  dry-run-upload:
    <<: *defaults
    steps:
      - checkout
      - <<: *pull-tmp-images
      - run:
          name: Dry-run of publishing docker images
          command: |
            set -o pipefail
            export LAST_BUILD_COMMIT=$(curl -sS 'https://circleci.com/api/v1/project/weaveworks/service/tree/master?circle-token='$CIRCLE_TOKEN'&filter=successful&limit=50' | jq -r 'map(select(.build_parameters.CIRCLE_JOB == "upload")) | .[0].vcs_revision')
            echo Last successful build was commit $LAST_BUILD_COMMIT
            ./push-images --dry-run --if-changed-since $LAST_BUILD_COMMIT

workflows:
  version: 2
  build_test_and_upload:
    jobs:
      - lint
      - test
      - build
      - integration-test:
          requires:
            - build
            - lint
            - test
      - upload:
          requires:
            - integration-test
          filters:
            branches:
              only: master
      - dry-run-upload:
          requires:
            - integration-test
          filters:
            branches:
              ignore: master
