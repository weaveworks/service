apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ReplicationController
  metadata:
    name: weave-scope-app
    labels:
      provider: weave-scope-app
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          provider: weave-scope-app
      spec:
        containers:
        - name: weave-scope-app
          image: weaveworks/scope:latest
          args:
          - --no-probe
          ports:
          - containerPort: 4040
            hostPort: 4040
- apiVersion: v1
  kind: Service
  metadata:
    name: weave-scope-app
    labels:
      provider: weave-scope-app
  spec:
    # type: LoadBalancer
    ports:
    - name: app
      port: 4040
    selector:
      provider: weave-scope-app
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    name: weave-scope-probe
    labels:
      k8s-app:  weave-scope-probe
  spec:
    template:
      metadata:
        name:  weave-scope-probe
        labels:
          k8s-app:  weave-scope-probe
      spec:
        hostPID: true
        hostNetwork: true
        containers:
        - name:  weave-scope-probe
          image: weaveworks/scope:latest
          args:
          - --no-app
          - --probe.docker.bridge=cbr0
          - --probe.docker=true
          - --probe.kubernetes=true
          # The URL below is correct but Kubernetes views won't work until
          # https://github.com/weaveworks/scope/issues/717 is fixed since the API
          # server requires a Bearer Token for authentication, which Scope is not yet providing:
          # https://github.com/weaveworks/scope/blob/be1d1d52d0aa2be17a483e917e88a56bd362ef7e/probe/kubernetes/client.go#L36
          - --probe.kubernetes.api=https://$(KUBERNETES_SERVICE_HOST)

          # We cannot refer to the Scope App with its Kubernetes Service
          # DNS name (weave-scope-app) directly because Docker doesn't
          # allow customizing the DNS servers (the Kubernetes DNS add-on
          # server in this case) of a container when it runs in the
          # host's network namespace (see
          # https://github.com/docker/docker/issues/10384#issuecomment-72069550
          # ). Instead, we use variable expansion on its service
          # environment variables.
          #
          # NOTE: Unfortunately this imposes a specific creation
          # ordering since the Scope App Service needs to be created first for
          # the service environment variables below to be accesible.
          - "$(WEAVE_SCOPE_APP_SERVICE_HOST):$(WEAVE_SCOPE_APP_SERVICE_PORT)"
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 50m
          volumeMounts:
          - name: docker-sock
            mountPath: /var/run/docker.sock
        volumes:
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
